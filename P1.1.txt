import io from 'socket.io-client';
import axios from 'axios';

const socket = io('http://localhost:5000');

function App() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [loggedIn, setLoggedIn] = useState(false);
  const [messages, setMessages] = useState([]);
  const [text, setText] = useState('');
  const [receiverId, setReceiverId] = useState('');

  useEffect(() => {
    socket.on('newMessage', (message) => {
      setMessages((prevMessages) => [...prevMessages, message]);
    });
  }, []);

  const handleLogin = async () => {
    try {
      const response = await axios.post('http://localhost:5000/api/login', { username, password });
      localStorage.setItem('token', response.data.token);
      setLoggedIn(true);
    } catch (error) {
      console.error('Login error', error);
    }
  };

  const handleSendMessage = async () => {
    try {
      const token = localStorage.getItem('token');
      const response = await axios.post(
        'http://localhost:5000/api/message',
        {
          senderId: 'userId', // Set to actual logged-in user's ID
          receiverId,
          text,
        },
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );
      setText('');
    } catch (error) {
      console.error('Error sending message', error);
    }
  };

  return (
    <div>
      {!loggedIn ? (
        <div>
          <h2>Login</h2>
          <input
            type="text"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            placeholder="Username"
          />
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            placeholder="Password"
          />
          <button onClick={handleLogin}>Login</button>
        </div>
      ) : (
        <div>
          <h2>Chat</h2>
          <div>
            <input
              type="text"
              value={receiverId}
              onChange={(e) => setReceiverId(e.target.value)}
              placeholder="Receiver ID"
            />
            <textarea
              value={text}
              onChange={(e) => setText(e.target.value)}
              placeholder="Type a message"
            ></textarea>
            <button onClick={handleSendMessage}>Send</button>
          </div>
          <div>
            <h3>Messages</h3>
            {messages.map((msg, index) => (
              <div key={index}>
                <p>{msg.text}</p>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}

export default App;
